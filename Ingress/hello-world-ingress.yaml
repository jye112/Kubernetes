apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: hello-world-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: letsencrypt
    acme.cert-manager.io/http01-edit-in-place: "true"
    #cert-manager.io/acme-challenge-type: http01
    kubernetes.io/tls-acme: "true"
spec:
  tls:
  - hosts:
    - hw-ingress.jye.com
    secretName: tls-secret
  rules:
  - host: hw-ingress.jye.com
    http:
      paths:
      - backend:
          serviceName: aks-helloworld-one
          servicePort: 80
        path: /hello-world-one(/|$)(.*)
      - backend:
          serviceName: aks-helloworld-two
          servicePort: 80
        path: /hello-world-two(/|$)(.*)
      - backend:
          serviceName: aks-helloworld-one
          servicePort: 80
        path: /(.*)
#---
#apiVersion: networking.k8s.io/v1beta1
#kind: Ingress
#metadata:
#  name: hello-world-ingress-static
#  annotations:
#    kubernetes.io/ingress.class: nginx
#    nginx.ingress.kubernetes.io/rewrite-target: /$1
#    nginx.ingress.kubernetes.io/use-regex: "true"
#    cert-manager.io/cluster-issuer: letsencrypt
#    #acme.cert-manager.io/http01-ingress-class: nginx
#    acme.cert-manager.io/http01-edit-in-place: "true"
#    #kubernetes.io/tls-acme: "true"
#spec:
#  tls:
#  - hosts:
#    - hw-ingress.jye.net
#    secretName: tls-secret
#  rules:
#  - host: hw-ingress.jye.net
#    http:
#      paths:
#      - backend:
#          serviceName: aks-helloworld-one
#          servicePort: 80
#        path: /static(/|$)(.*)